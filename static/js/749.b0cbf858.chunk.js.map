{"version":3,"file":"static/js/749.b0cbf858.chunk.js","mappings":"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","sources":["components/MovieCards/MovieCards.jsx","components/MovieCardsGallery/MovieCardsGallery.jsx","components/SearchBar/SearchBar.jsx","components/LoadmoreBtn/Button.jsx","components/Pages/Movies.jsx"],"sourcesContent":["import React from \"react\";\nimport './MovieCardStyle.css';\nimport noPoster from 'image/no-poster.jpg';\nimport PropTypes from 'prop-types';\n\nconst MovieCardItem = ({ movie }) => {\n    const { id, title, poster_path} = movie;\n   \n    \n    const imageSrc = movie.poster_path\n      ? `https://image.tmdb.org/t/p/w500${poster_path}`\n      : noPoster;\n        return (\n            <li className=\"MovieCardItem\">\n                <img className=\"MovieCardItemImage\" loading=\"lazy\" alt={id} src={imageSrc} />\n                <div className=\"MovieDescription\">\n                <h2 className=\"MovieCardTitle\">{title}</h2>\n                </div>\n            </li>\n        )\n    };\n\nMovieCardItem.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            title: PropTypes.string.isRequired,\n            poster_path: PropTypes.string.isRequired\n        })\n    )\n}\n\nexport default MovieCardItem;","import MovieCardItem from 'components/MovieCards/MovieCards';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nconst MovieCardsGallery = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className=\"MovieCardsGallery\">\n      {movies.map(movie => (\n        <Link\n          to={`/movies/${movie.id}`}\n          state={{ from: location }}\n          key={movie.id}\n          className=\"movieLink\"\n        >\n          <MovieCardItem key={movie.id} movie={movie} />\n        </Link>\n      ))}\n    </ul>\n  );\n};\n\nMovieCardsGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MovieCardsGallery;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport './Searchbar.css';\n\nconst SearchBar = ({ value, onChange }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  return (\n    <form className=\"SearchForm\" onSubmit={handleSubmit}>\n      <button type=\"submit\" className=\"SearchForm-button\">\n        <span className=\"button-label\">Search</span>\n      </button>\n\n      <input\n        className=\"SearchForm-input\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search images and photos\"\n        onChange={e => onChange(e.target.value)}\n        value={value}\n      />\n    </form>\n  );\n};\n\nSearchBar.propTypes = {\n  value: propTypes.string,\n  onChange: propTypes.func,\n};\n\nexport default SearchBar;\n","import './ButtonStyle.css';\n\nconst Button = ({ onClick }) => {\n  return (\n    <div className=\"LoadMoreContainer\">\n      <button className=\"LoadMoreButton\" onClick={onClick}>\n        Load More\n      </button>\n    </div>\n  );\n};\n\nexport default Button;\n","import SearchBar from 'components/SearchBar/SearchBar';\nimport { useState, useEffect } from 'react';\nimport Notiflix from 'notiflix';\nimport MovieCardsGallery from 'components/MovieCardsGallery/MovieCardsGallery';\nimport Button from 'components/LoadmoreBtn/Button';\nimport { getSearchMovies } from 'components/Services/api';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movieCard, setMovieCard] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isEnd, setIsEnd] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieName = searchParams.get('query') ?? 'Friends';\n\n  useEffect(() => {\n    if (movieName === '') return;\n\n    const fetchSearchMovies = async () => {\n      setIsLoading(true);\n      setIsError(false);\n\n      try {\n        const response = await getSearchMovies(movieName, page);\n        const data = response;\n\n        setMovieCard(prevMovies =>\n          page === 1 ? data : [...prevMovies, ...data]\n        );\n        setIsLoading(false);\n\n        if (data.length === 0) {\n          setIsEnd(true);\n          Notiflix.Notify.warning('No movies found. Try a different search.', {\n            position: 'center-top',\n          });\n          return;\n        }\n      } catch (error) {\n        setIsLoading(false);\n        setIsError(true);\n        Notiflix.Notify.failure(\n          `An error occured while fetching data: ${error}`,\n          {\n            position: 'center-top',\n          }\n        );\n      }\n    };\n    fetchSearchMovies();\n  }, [movieName, page]);\n\n  const handleLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' && { query };\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <div className=\"Movies-container\">\n      <SearchBar onChange={updateQueryString} />\n      <MovieCardsGallery movies={movieCard} />\n      {!isLoading && !isError && movieCard.length > 0 && !isEnd && (\n        <Button onClick={handleLoadMore} />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["_ref","movie","id","title","poster_path","imageSrc","concat","noPoster","_jsxs","className","children","_jsx","loading","alt","src","movies","location","useLocation","map","Link","to","state","from","MovieCardItem","value","onChange","onSubmit","e","preventDefault","type","autoComplete","autoFocus","placeholder","target","onClick","_searchParams$get","_useState","useState","_useState2","_slicedToArray","movieCard","setMovieCard","_useState3","_useState4","page","setPage","_useState5","_useState6","isEnd","setIsEnd","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","isError","setIsError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","movieName","get","useEffect","fetchSearchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","getSearchMovies","sent","prevMovies","_toConsumableArray","length","Notiflix","position","abrupt","t0","stop","apply","arguments","SearchBar","query","MovieCardsGallery","Button","prevPage"],"sourceRoot":""}